[net]
# Testing
#batch=1
#subdivisions=1
# Training
batch=64
subdivisions=8
width=640
height=640
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.00261
burn_in=1000

max_batches = 15000
policy=steps
steps=12000,13500
scales=.1,.1

################### 00
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
activation=leaky

###1.##	
[convolutional]
batch_normalize=1
filters=64
size=3
stride=2
pad=1
activation=leaky

###2.##	
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

###3.##	
[route]
layers=-1
groups=2
group_id=1

###4.##	
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

###5.##	
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

###6.##	
[route]
layers = -1,-2

###7.##	
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

###8.##	
[route]
layers = -6,-1

###9.##	
[maxpool]
size=2
stride=2

###10.##	
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

###11.##	
[route]
layers=-1
groups=2
group_id=1

###12.##	
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

###13.##	
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

###14.##	
[route]
layers = -1,-2

###15.##	
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

###16.##	
[route]
layers = -6,-1

###17.##	
[maxpool]
size=2
stride=2

###18.##	
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

###19.##	
[route]
layers=-1
groups=2
group_id=1

###20.##	
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

###21.##	
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

###22.##	
[route]
layers = -1,-2

###23.##	
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

###24.##	
[route]
layers = -6,-1

###25.##	
[maxpool]
size=2
stride=2

####添加内容开始#####
###26.##	
[route]
layers = -1

###27.##	
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

#####RES开始####
###28.##	
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

###29.##	
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

###30.##	
[shortcut]
from=-3
activation=linear

###31.##	
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

###32.##	
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky
###PMA开始###
###CAM开始###
####通道方向Global avgpooling####
###33.##	
[avgpool]
channelpool = 0

###34.##	
[convolutional]
batch_normalize=1
filters=8
size=1
stride=1
pad=1
activation=linear

###35.##	
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=linear
####通道方向Global maxpooling##
###36.##	
[route]
layers = -4

###37.##	
[maxpool]
size=13
stride=13
padding=0

#####MLP########
###38.##	
[convolutional]
batch_normalize=1
filters=8
size=1
stride=1
pad=1
activation=linear

###39.##	
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=linear

#####两个池化层输出相加#####
###40.##	
[shortcut]
from=-5
activation=logistic

####接到第32層#####
###41.##	
[scale_channels]
from = -9
#scale_wh = 1
activation= linear

####CAM和第32層相乘###
###42.##
[sam]
from = -10
activation= linear
####CAM结束###

####SAM開始###
####從第32層開始 這層不確定要不要加###
###43.##
[route]
layers = 32

###44.##	
[maxpool]
maxpool_depth = 1
out_channels = 1

###45.##	
[route]
layers = 32

###46.##	
[avgpool]
channelpool = 1

###47.##	
[route]
layers = -1, -3

###48.##	
[convolutional]
batch_normalize=1
filters=128
size=7
stride=1
pad=1
activation=logistic
#Sigmoid

###SAM和第32層相乘###
###49.##	 
[sam]
from = 32
activation= linear
####SAM结束###

### SAM和CAM相加階段 ###
###長寬不同###
###不確定要不要先加一層conv或scale channels再加CAM第42層###
###50.##	
[shortcut]
from=42
activation=logistic
### activation不確定哪個
####PMA结束####

###51.##	
[sam]
from = 41
activation= linear

###52.##	
[shortcut]
from=30
activation=linear
#####RES结束######
###53.##	
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

###54.##	
[route]
layers = -1,25

###55.##	
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
#####添加内容结束######

###56.##	
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

############# SPP Module ###########
###57.##	
[maxpool]
size=2
stride=1

###58.##	
[route]
layers = -2

###59.##	
[maxpool]
size=2
stride=1

###60.##	
[route]
layers = -4

###61.##	
[maxpool]
size=2
stride=1

###62.##	
[route]
layers = -1, -3, -5, -6

##################################
###63.##	
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

###64.##	
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

###65.##	
[convolutional]
size=1
stride=1
pad=1
filters=24
activation=linear

###66.##	
[yolo]
mask = 0,1,2
anchors = 17, 13,  27, 20,  41, 30,  42, 54,  66, 45,  86, 73, 118,119, 133,248, 252,365
classes=3
num=9
jitter=.3
scale_x_y = 1.05
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=ciou
ignore_thresh = .7
truth_thresh = 1
random=0
resize=1.5
nms_kind=greedynms
beta_nms=0.6
#new_coords=1
#scale_x_y = 2.0

###67.##	
[route]
layers = -4

###68.##	
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

###69.##	
[upsample]
stride=2

###70.##	
[route]
layers = -1, 18

###71.##	
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

###72.##	
[convolutional]
size=1
stride=1
pad=1
filters=24
activation=linear

###73.##	
[yolo]
mask = 3,4,5
anchors = 17, 13,  27, 20,  41, 30,  42, 54,  66, 45,  86, 73, 118,119, 133,248, 252,365
classes=3
num=9
jitter=.3
scale_x_y = 1.05
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=ciou
ignore_thresh = .7
truth_thresh = 1
random=0
resize=1.5
nms_kind=greedynms
beta_nms=0.6
#new_coords=1
#scale_x_y = 2.0

##########Additional Yolo Layer ###############################
###74.##	
[route]
layers = -3

###75.##	
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

###76.##	
[upsample]
stride=2

###77.##	
[route]
layers = -1, 15

###78.##	
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

###79.##	
[convolutional]
size=1
stride=1
pad=1
filters=24
activation=linear

###80.##	
[yolo]
mask = 6,7,8
anchors = 17, 13,  27, 20,  41, 30,  42, 54,  66, 45,  86, 73, 118,119, 133,248, 252,365
classes=3
num=9
jitter=.3
scale_x_y = 1.05
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=ciou
ignore_thresh = .7
truth_thresh = 1
random=0
resize=1.5
nms_kind=greedynms
beta_nms=0.6
#new_coords=1
#scale_x_y = 2.0
